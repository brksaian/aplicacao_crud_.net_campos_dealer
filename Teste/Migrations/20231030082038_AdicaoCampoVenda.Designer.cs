// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Teste.Data;

#nullable disable

namespace Teste.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20231030082038_AdicaoCampoVenda")]
    partial class AdicaoCampoVenda
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Teste.Models.ClienteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Teste.Models.DetalheVendaModel", b =>
                {
                    b.Property<int>("idDetalheVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDetalheVenda"));

                    b.Property<int>("ProdutoidProduto")
                        .HasColumnType("int");

                    b.Property<int>("VendaidVenda")
                        .HasColumnType("int");

                    b.Property<int>("idProduto")
                        .HasColumnType("int");

                    b.Property<int>("idVenda")
                        .HasColumnType("int");

                    b.Property<int>("qtdVenda")
                        .HasColumnType("int");

                    b.Property<float>("vlrUnitarioVenda")
                        .HasColumnType("real");

                    b.HasKey("idDetalheVenda");

                    b.HasIndex("ProdutoidProduto");

                    b.HasIndex("VendaidVenda");

                    b.ToTable("DetalheVendas");
                });

            modelBuilder.Entity("Teste.Models.ProdutoModel", b =>
                {
                    b.Property<int>("idProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProduto"));

                    b.Property<string>("dscProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("vlrUnitario")
                        .HasColumnType("real");

                    b.HasKey("idProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Teste.Models.VendaModel", b =>
                {
                    b.Property<int>("idVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idVenda"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dthVenda")
                        .HasColumnType("datetime2");

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.Property<int>("qtdVenda")
                        .HasColumnType("int");

                    b.Property<float>("vlrTotalVenda")
                        .HasColumnType("real");

                    b.HasKey("idVenda");

                    b.HasIndex("ClienteId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("Teste.Models.DetalheVendaModel", b =>
                {
                    b.HasOne("Teste.Models.ProdutoModel", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoidProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Teste.Models.VendaModel", "Venda")
                        .WithMany("DetalhesVenda")
                        .HasForeignKey("VendaidVenda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("Teste.Models.VendaModel", b =>
                {
                    b.HasOne("Teste.Models.ClienteModel", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Teste.Models.VendaModel", b =>
                {
                    b.Navigation("DetalhesVenda");
                });
#pragma warning restore 612, 618
        }
    }
}
